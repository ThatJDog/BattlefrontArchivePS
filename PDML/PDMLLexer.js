// Generated from PDML.g4 by ANTLR 4.13.2
// jshint ignore: start
// import antlr4 from 'antlr4';


const serializedATN = [4,0,18,157,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,1,0,1,0,1,1,1,1,1,2,
1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,5,8,
60,8,8,10,8,12,8,63,9,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,
1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,86,8,9,1,10,1,10,1,10,1,10,1,10,
1,10,1,10,1,10,1,10,3,10,97,8,10,1,11,1,11,1,12,1,12,3,12,103,8,12,1,13,
1,13,1,13,1,13,5,13,109,8,13,10,13,12,13,112,9,13,1,13,1,13,1,14,1,14,1,
14,1,14,5,14,120,8,14,10,14,12,14,123,9,14,1,14,1,14,1,14,1,14,1,14,1,15,
1,15,5,15,132,8,15,10,15,12,15,135,9,15,1,16,3,16,138,8,16,1,16,4,16,141,
8,16,11,16,12,16,142,1,16,1,16,4,16,147,8,16,11,16,12,16,148,3,16,151,8,
16,1,17,4,17,154,8,17,11,17,12,17,155,1,121,0,18,1,1,3,2,5,3,7,4,9,5,11,
6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,1,
0,8,2,0,34,34,92,92,3,0,48,57,65,70,97,102,2,0,10,10,13,13,3,0,65,90,95,
95,97,122,5,0,45,45,48,57,65,90,95,95,97,122,2,0,43,43,45,45,1,0,48,57,3,
0,9,10,13,13,32,32,170,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,
9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,1,37,1,0,0,0,3,39,1,0,0,0,5,41,1,0,0,0,
7,44,1,0,0,0,9,47,1,0,0,0,11,49,1,0,0,0,13,51,1,0,0,0,15,53,1,0,0,0,17,55,
1,0,0,0,19,66,1,0,0,0,21,96,1,0,0,0,23,98,1,0,0,0,25,102,1,0,0,0,27,104,
1,0,0,0,29,115,1,0,0,0,31,129,1,0,0,0,33,137,1,0,0,0,35,153,1,0,0,0,37,38,
5,60,0,0,38,2,1,0,0,0,39,40,5,62,0,0,40,4,1,0,0,0,41,42,5,60,0,0,42,43,5,
47,0,0,43,6,1,0,0,0,44,45,5,47,0,0,45,46,5,62,0,0,46,8,1,0,0,0,47,48,5,123,
0,0,48,10,1,0,0,0,49,50,5,125,0,0,50,12,1,0,0,0,51,52,5,91,0,0,52,14,1,0,
0,0,53,54,5,93,0,0,54,16,1,0,0,0,55,61,5,34,0,0,56,60,8,0,0,0,57,58,5,92,
0,0,58,60,9,0,0,0,59,56,1,0,0,0,59,57,1,0,0,0,60,63,1,0,0,0,61,59,1,0,0,
0,61,62,1,0,0,0,62,64,1,0,0,0,63,61,1,0,0,0,64,65,5,34,0,0,65,18,1,0,0,0,
66,85,5,35,0,0,67,68,7,1,0,0,68,69,7,1,0,0,69,86,7,1,0,0,70,71,7,1,0,0,71,
72,7,1,0,0,72,73,7,1,0,0,73,74,7,1,0,0,74,75,7,1,0,0,75,86,7,1,0,0,76,77,
7,1,0,0,77,78,7,1,0,0,78,79,7,1,0,0,79,80,7,1,0,0,80,81,7,1,0,0,81,82,7,
1,0,0,82,83,7,1,0,0,83,84,7,1,0,0,84,86,7,1,0,0,85,67,1,0,0,0,85,70,1,0,
0,0,85,76,1,0,0,0,86,20,1,0,0,0,87,88,5,116,0,0,88,89,5,114,0,0,89,90,5,
117,0,0,90,97,5,101,0,0,91,92,5,102,0,0,92,93,5,97,0,0,93,94,5,108,0,0,94,
95,5,115,0,0,95,97,5,101,0,0,96,87,1,0,0,0,96,91,1,0,0,0,97,22,1,0,0,0,98,
99,5,61,0,0,99,24,1,0,0,0,100,103,3,27,13,0,101,103,3,29,14,0,102,100,1,
0,0,0,102,101,1,0,0,0,103,26,1,0,0,0,104,105,5,47,0,0,105,106,5,47,0,0,106,
110,1,0,0,0,107,109,8,2,0,0,108,107,1,0,0,0,109,112,1,0,0,0,110,108,1,0,
0,0,110,111,1,0,0,0,111,113,1,0,0,0,112,110,1,0,0,0,113,114,6,13,0,0,114,
28,1,0,0,0,115,116,5,47,0,0,116,117,5,42,0,0,117,121,1,0,0,0,118,120,9,0,
0,0,119,118,1,0,0,0,120,123,1,0,0,0,121,122,1,0,0,0,121,119,1,0,0,0,122,
124,1,0,0,0,123,121,1,0,0,0,124,125,5,42,0,0,125,126,5,47,0,0,126,127,1,
0,0,0,127,128,6,14,0,0,128,30,1,0,0,0,129,133,7,3,0,0,130,132,7,4,0,0,131,
130,1,0,0,0,132,135,1,0,0,0,133,131,1,0,0,0,133,134,1,0,0,0,134,32,1,0,0,
0,135,133,1,0,0,0,136,138,7,5,0,0,137,136,1,0,0,0,137,138,1,0,0,0,138,140,
1,0,0,0,139,141,7,6,0,0,140,139,1,0,0,0,141,142,1,0,0,0,142,140,1,0,0,0,
142,143,1,0,0,0,143,150,1,0,0,0,144,146,5,46,0,0,145,147,7,6,0,0,146,145,
1,0,0,0,147,148,1,0,0,0,148,146,1,0,0,0,148,149,1,0,0,0,149,151,1,0,0,0,
150,144,1,0,0,0,150,151,1,0,0,0,151,34,1,0,0,0,152,154,7,7,0,0,153,152,1,
0,0,0,154,155,1,0,0,0,155,153,1,0,0,0,155,156,1,0,0,0,156,36,1,0,0,0,14,
0,59,61,85,96,102,110,121,133,137,142,148,150,155,1,6,0,0];


// const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

// const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

const atn = new window.antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map((ds, index) => new window.antlr4.dfa.DFA(ds, index));

export default class PDMLLexer extends antlr4.Lexer {

    static grammarFileName = "PDML.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'<'", "'>'", "'</'", "'/>'", "'{'", "'}'", 
                         "'['", "']'", null, null, null, "'='" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, "STRING_LITERAL", "HEX_COLOR", "BOOL_LITERAL", 
                          "ASSIGN", "COMMENT", "SINGLE_COMMENT", "MULTI_COMMENT", 
                          "IDFR", "NUMBER", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "STRING_LITERAL", "HEX_COLOR", "BOOL_LITERAL", 
                      "ASSIGN", "COMMENT", "SINGLE_COMMENT", "MULTI_COMMENT", 
                      "IDFR", "NUMBER", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

PDMLLexer.EOF = antlr4.Token.EOF;
PDMLLexer.T__0 = 1;
PDMLLexer.T__1 = 2;
PDMLLexer.T__2 = 3;
PDMLLexer.T__3 = 4;
PDMLLexer.T__4 = 5;
PDMLLexer.T__5 = 6;
PDMLLexer.T__6 = 7;
PDMLLexer.T__7 = 8;
PDMLLexer.STRING_LITERAL = 9;
PDMLLexer.HEX_COLOR = 10;
PDMLLexer.BOOL_LITERAL = 11;
PDMLLexer.ASSIGN = 12;
PDMLLexer.COMMENT = 13;
PDMLLexer.SINGLE_COMMENT = 14;
PDMLLexer.MULTI_COMMENT = 15;
PDMLLexer.IDFR = 16;
PDMLLexer.NUMBER = 17;
PDMLLexer.WS = 18;



